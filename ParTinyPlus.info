-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from ParTinyPlus.y
-----------------------------------------------------------------------------

state 63 contains 9 shift/reduce conflicts.

rule 37 is unused
rule 38 is unused
rule 39 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListTopDef 'main' Block                 (4)
	TopDef -> Type Ident '(' ListArg ')' Block         (5)
	ListTopDef -> TopDef                               (6)
	ListTopDef -> TopDef ListTopDef                    (7)
	Arg -> Type Ident                                  (8)
	Arg -> Type Ident '[' ']'                          (9)
	Arg -> Type '&' Ident                              (10)
	ListArg ->                                         (11)
	ListArg -> Arg                                     (12)
	ListArg -> Arg ',' ListArg                         (13)
	Block -> '[' ListDecl ']' '{' Stmt '}'             (14)
	Block -> '{' Stmt '}'                              (15)
	Decl -> Type Item                                  (16)
	Item -> Ident                                      (17)
	Item -> Ident '=' Expr                             (18)
	Item -> Ident '[' Expr ']'                         (19)
	ListDecl -> Decl                                   (20)
	ListDecl -> Decl ';' ListDecl                      (21)
	Stmt -> Stmt Stmt                                  (22)
	Stmt -> ';'                                        (23)
	Stmt -> Block                                      (24)
	Stmt -> LValue '=' Expr ';'                        (25)
	Stmt -> LValue '++' ';'                            (26)
	Stmt -> LValue '--' ';'                            (27)
	Stmt -> 'return' Expr ';'                          (28)
	Stmt -> 'if' '(' Expr ')' Block                    (29)
	Stmt -> 'if' '(' Expr ')' Block 'else' Block       (30)
	Stmt -> 'while' '(' Expr ')' Block                 (31)
	Stmt -> 'for' Ident 'in' 'range' '(' Expr ')' Block   (32)
	Stmt -> 'print' Expr ';'                           (33)
	Type -> 'int'                                      (34)
	Type -> 'string'                                   (35)
	Type -> 'boolean'                                  (36)
	ListType ->                                        (37)
	ListType -> Type                                   (38)
	ListType -> Type ',' ListType                      (39)
	LValue -> Ident                                    (40)
	LValue -> Ident '[' Expr ']'                       (41)
	Expr6 -> LValue                                    (42)
	Expr6 -> Integer                                   (43)
	Expr6 -> 'true'                                    (44)
	Expr6 -> 'false'                                   (45)
	Expr6 -> Ident '(' ListExpr ')'                    (46)
	Expr6 -> String                                    (47)
	Expr6 -> Expr7                                     (48)
	Expr5 -> '-' Expr6                                 (49)
	Expr5 -> '!' Expr6                                 (50)
	Expr5 -> Expr6                                     (51)
	Expr4 -> Expr4 MulOp Expr5                         (52)
	Expr4 -> Expr5                                     (53)
	Expr3 -> Expr3 AddOp Expr4                         (54)
	Expr3 -> Expr4                                     (55)
	Expr2 -> Expr2 RelOp Expr3                         (56)
	Expr2 -> Expr3                                     (57)
	Expr1 -> Expr2 '&&' Expr1                          (58)
	Expr1 -> Expr2                                     (59)
	Expr -> Expr1 '||' Expr                            (60)
	Expr -> Expr1                                      (61)
	Expr7 -> '(' Expr ')'                              (62)
	ListExpr ->                                        (63)
	ListExpr -> Expr                                   (64)
	ListExpr -> Expr ',' ListExpr                      (65)
	AddOp -> '+'                                       (66)
	AddOp -> '-'                                       (67)
	MulOp -> '*'                                       (68)
	MulOp -> '/'                                       (69)
	MulOp -> '%'                                       (70)
	RelOp -> '<'                                       (71)
	RelOp -> '<='                                      (72)
	RelOp -> '>'                                       (73)
	RelOp -> '>='                                      (74)
	RelOp -> '=='                                      (75)
	RelOp -> '!='                                      (76)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&'            { PT _ (TS _ 4) }
	'&&'           { PT _ (TS _ 5) }
	'('            { PT _ (TS _ 6) }
	')'            { PT _ (TS _ 7) }
	'*'            { PT _ (TS _ 8) }
	'+'            { PT _ (TS _ 9) }
	'++'           { PT _ (TS _ 10) }
	','            { PT _ (TS _ 11) }
	'-'            { PT _ (TS _ 12) }
	'--'           { PT _ (TS _ 13) }
	'/'            { PT _ (TS _ 14) }
	';'            { PT _ (TS _ 15) }
	'<'            { PT _ (TS _ 16) }
	'<='           { PT _ (TS _ 17) }
	'='            { PT _ (TS _ 18) }
	'=='           { PT _ (TS _ 19) }
	'>'            { PT _ (TS _ 20) }
	'>='           { PT _ (TS _ 21) }
	'['            { PT _ (TS _ 22) }
	']'            { PT _ (TS _ 23) }
	'boolean'      { PT _ (TS _ 24) }
	'else'         { PT _ (TS _ 25) }
	'false'        { PT _ (TS _ 26) }
	'for'          { PT _ (TS _ 27) }
	'if'           { PT _ (TS _ 28) }
	'in'           { PT _ (TS _ 29) }
	'int'          { PT _ (TS _ 30) }
	'main'         { PT _ (TS _ 31) }
	'print'        { PT _ (TS _ 32) }
	'range'        { PT _ (TS _ 33) }
	'return'       { PT _ (TS _ 34) }
	'string'       { PT _ (TS _ 35) }
	'true'         { PT _ (TS _ 36) }
	'while'        { PT _ (TS _ 37) }
	'{'            { PT _ (TS _ 38) }
	'||'           { PT _ (TS _ 39) }
	'}'            { PT _ (TS _ 40) }
	L_Ident        { PT _ (TV $$) }
	L_integ        { PT _ (TI $$) }
	L_quoted       { PT _ (TL $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	TopDef          rule  5
	ListTopDef      rules 6, 7
	Arg             rules 8, 9, 10
	ListArg         rules 11, 12, 13
	Block           rules 14, 15
	Decl            rule  16
	Item            rules 17, 18, 19
	ListDecl        rules 20, 21
	Stmt            rules 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33
	Type            rules 34, 35, 36
	ListType        rules 37, 38, 39
	LValue          rules 40, 41
	Expr6           rules 42, 43, 44, 45, 46, 47, 48
	Expr5           rules 49, 50, 51
	Expr4           rules 52, 53
	Expr3           rules 54, 55
	Expr2           rules 56, 57
	Expr1           rules 58, 59
	Expr            rules 60, 61
	Expr7           rule  62
	ListExpr        rules 63, 64, 65
	AddOp           rules 66, 67
	MulOp           rules 68, 69, 70
	RelOp           rules 71, 72, 73, 74, 75, 76

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram -> . Program                        (rule 0)

	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9

	Program        goto state 3
	TopDef         goto state 4
	ListTopDef     goto state 5
	Type           goto state 6

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'['            reduce using rule 1
	']'            reduce using rule 1
	'in'           reduce using rule 1
	'||'           reduce using rule 1


State 3

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 4

	ListTopDef -> TopDef .                              (rule 6)
	ListTopDef -> TopDef . ListTopDef                   (rule 7)

	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'main'         reduce using rule 6
	'string'       shift, and enter state 9

	TopDef         goto state 4
	ListTopDef     goto state 12
	Type           goto state 6

State 5

	Program -> ListTopDef . 'main' Block                (rule 4)

	'main'         shift, and enter state 11


State 6

	TopDef -> Type . Ident '(' ListArg ')' Block        (rule 5)

	L_Ident        shift, and enter state 2

	Ident          goto state 10

State 7

	Type -> 'boolean' .                                 (rule 36)

	'&'            reduce using rule 36
	L_Ident        reduce using rule 36


State 8

	Type -> 'int' .                                     (rule 34)

	'&'            reduce using rule 34
	L_Ident        reduce using rule 34


State 9

	Type -> 'string' .                                  (rule 35)

	'&'            reduce using rule 35
	L_Ident        reduce using rule 35


State 10

	TopDef -> Type Ident . '(' ListArg ')' Block        (rule 5)

	'('            shift, and enter state 16


State 11

	Program -> ListTopDef 'main' . Block                (rule 4)

	'['            shift, and enter state 14
	'{'            shift, and enter state 15

	Block          goto state 13

State 12

	ListTopDef -> TopDef ListTopDef .                   (rule 7)

	'main'         reduce using rule 7


State 13

	Program -> ListTopDef 'main' Block .                (rule 4)

	%eof           reduce using rule 4


State 14

	Block -> '[' . ListDecl ']' '{' Stmt '}'            (rule 14)

	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9

	Decl           goto state 30
	ListDecl       goto state 31
	Type           goto state 32

State 15

	Block -> '{' . Stmt '}'                             (rule 15)

	';'            shift, and enter state 24
	'['            shift, and enter state 14
	'for'          shift, and enter state 25
	'if'           shift, and enter state 26
	'print'        shift, and enter state 27
	'return'       shift, and enter state 28
	'while'        shift, and enter state 29
	'{'            shift, and enter state 15
	L_Ident        shift, and enter state 2

	Ident          goto state 20
	Block          goto state 21
	Stmt           goto state 22
	LValue         goto state 23

State 16

	TopDef -> Type Ident '(' . ListArg ')' Block        (rule 5)

	')'            reduce using rule 11
	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9

	Arg            goto state 17
	ListArg        goto state 18
	Type           goto state 19

State 17

	ListArg -> Arg .                                    (rule 12)
	ListArg -> Arg . ',' ListArg                        (rule 13)

	')'            reduce using rule 12
	','            shift, and enter state 69


State 18

	TopDef -> Type Ident '(' ListArg . ')' Block        (rule 5)

	')'            shift, and enter state 68


State 19

	Arg -> Type . Ident                                 (rule 8)
	Arg -> Type . Ident '[' ']'                         (rule 9)
	Arg -> Type . '&' Ident                             (rule 10)

	'&'            shift, and enter state 67
	L_Ident        shift, and enter state 2

	Ident          goto state 66

State 20

	LValue -> Ident .                                   (rule 40)
	LValue -> Ident . '[' Expr ']'                      (rule 41)

	'++'           reduce using rule 40
	'--'           reduce using rule 40
	'='            reduce using rule 40
	'['            shift, and enter state 65


State 21

	Stmt -> Block .                                     (rule 24)

	';'            reduce using rule 24
	'['            reduce using rule 24
	'for'          reduce using rule 24
	'if'           reduce using rule 24
	'print'        reduce using rule 24
	'return'       reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_Ident        reduce using rule 24


State 22

	Block -> '{' Stmt . '}'                             (rule 15)
	Stmt -> Stmt . Stmt                                 (rule 22)

	';'            shift, and enter state 24
	'['            shift, and enter state 14
	'for'          shift, and enter state 25
	'if'           shift, and enter state 26
	'print'        shift, and enter state 27
	'return'       shift, and enter state 28
	'while'        shift, and enter state 29
	'{'            shift, and enter state 15
	'}'            shift, and enter state 64
	L_Ident        shift, and enter state 2

	Ident          goto state 20
	Block          goto state 21
	Stmt           goto state 63
	LValue         goto state 23

State 23

	Stmt -> LValue . '=' Expr ';'                       (rule 25)
	Stmt -> LValue . '++' ';'                           (rule 26)
	Stmt -> LValue . '--' ';'                           (rule 27)

	'++'           shift, and enter state 60
	'--'           shift, and enter state 61
	'='            shift, and enter state 62


State 24

	Stmt -> ';' .                                       (rule 23)

	';'            reduce using rule 23
	'['            reduce using rule 23
	'for'          reduce using rule 23
	'if'           reduce using rule 23
	'print'        reduce using rule 23
	'return'       reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_Ident        reduce using rule 23


State 25

	Stmt -> 'for' . Ident 'in' 'range' '(' Expr ')' Block    (rule 32)

	L_Ident        shift, and enter state 2

	Ident          goto state 59

State 26

	Stmt -> 'if' . '(' Expr ')' Block                   (rule 29)
	Stmt -> 'if' . '(' Expr ')' Block 'else' Block      (rule 30)

	'('            shift, and enter state 58


State 27

	Stmt -> 'print' . Expr ';'                          (rule 33)

	'!'            shift, and enter state 50
	'('            shift, and enter state 51
	'-'            shift, and enter state 52
	'false'        shift, and enter state 53
	'true'         shift, and enter state 54
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 55
	L_quoted       shift, and enter state 56

	Ident          goto state 38
	Integer        goto state 39
	String         goto state 40
	LValue         goto state 41
	Expr6          goto state 42
	Expr5          goto state 43
	Expr4          goto state 44
	Expr3          goto state 45
	Expr2          goto state 46
	Expr1          goto state 47
	Expr           goto state 57
	Expr7          goto state 49

State 28

	Stmt -> 'return' . Expr ';'                         (rule 28)

	'!'            shift, and enter state 50
	'('            shift, and enter state 51
	'-'            shift, and enter state 52
	'false'        shift, and enter state 53
	'true'         shift, and enter state 54
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 55
	L_quoted       shift, and enter state 56

	Ident          goto state 38
	Integer        goto state 39
	String         goto state 40
	LValue         goto state 41
	Expr6          goto state 42
	Expr5          goto state 43
	Expr4          goto state 44
	Expr3          goto state 45
	Expr2          goto state 46
	Expr1          goto state 47
	Expr           goto state 48
	Expr7          goto state 49

State 29

	Stmt -> 'while' . '(' Expr ')' Block                (rule 31)

	'('            shift, and enter state 37


State 30

	ListDecl -> Decl .                                  (rule 20)
	ListDecl -> Decl . ';' ListDecl                     (rule 21)

	';'            shift, and enter state 36
	']'            reduce using rule 20


State 31

	Block -> '[' ListDecl . ']' '{' Stmt '}'            (rule 14)

	']'            shift, and enter state 35


State 32

	Decl -> Type . Item                                 (rule 16)

	L_Ident        shift, and enter state 2

	Ident          goto state 33
	Item           goto state 34

State 33

	Item -> Ident .                                     (rule 17)
	Item -> Ident . '=' Expr                            (rule 18)
	Item -> Ident . '[' Expr ']'                        (rule 19)

	';'            reduce using rule 17
	'='            shift, and enter state 105
	'['            shift, and enter state 106
	']'            reduce using rule 17


State 34

	Decl -> Type Item .                                 (rule 16)

	';'            reduce using rule 16
	']'            reduce using rule 16


State 35

	Block -> '[' ListDecl ']' . '{' Stmt '}'            (rule 14)

	'{'            shift, and enter state 104


State 36

	ListDecl -> Decl ';' . ListDecl                     (rule 21)

	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9

	Decl           goto state 30
	ListDecl       goto state 103
	Type           goto state 32

State 37

	Stmt -> 'while' '(' . Expr ')' Block                (rule 31)

	'!'            shift, and enter state 50
	'('            shift, and enter state 51
	'-'            shift, and enter state 52
	'false'        shift, and enter state 53
	'true'         shift, and enter state 54
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 55
	L_quoted       shift, and enter state 56

	Ident          goto state 38
	Integer        goto state 39
	String         goto state 40
	LValue         goto state 41
	Expr6          goto state 42
	Expr5          goto state 43
	Expr4          goto state 44
	Expr3          goto state 45
	Expr2          goto state 46
	Expr1          goto state 47
	Expr           goto state 102
	Expr7          goto state 49

State 38

	LValue -> Ident .                                   (rule 40)
	LValue -> Ident . '[' Expr ']'                      (rule 41)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 46)

	'!='           reduce using rule 40
	'%'            reduce using rule 40
	'&&'           reduce using rule 40
	'('            shift, and enter state 101
	')'            reduce using rule 40
	'*'            reduce using rule 40
	'+'            reduce using rule 40
	','            reduce using rule 40
	'-'            reduce using rule 40
	'/'            reduce using rule 40
	';'            reduce using rule 40
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'=='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	'['            shift, and enter state 65
	']'            reduce using rule 40
	'||'           reduce using rule 40


State 39

	Expr6 -> Integer .                                  (rule 43)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	']'            reduce using rule 43
	'||'           reduce using rule 43


State 40

	Expr6 -> String .                                   (rule 47)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	']'            reduce using rule 47
	'||'           reduce using rule 47


State 41

	Expr6 -> LValue .                                   (rule 42)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'&&'           reduce using rule 42
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'/'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	']'            reduce using rule 42
	'||'           reduce using rule 42


State 42

	Expr5 -> Expr6 .                                    (rule 51)

	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'/'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	']'            reduce using rule 51
	'||'           reduce using rule 51


State 43

	Expr4 -> Expr5 .                                    (rule 53)

	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'&&'           reduce using rule 53
	')'            reduce using rule 53
	'*'            reduce using rule 53
	'+'            reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'/'            reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	']'            reduce using rule 53
	'||'           reduce using rule 53


State 44

	Expr4 -> Expr4 . MulOp Expr5                        (rule 52)
	Expr3 -> Expr4 .                                    (rule 55)

	'!='           reduce using rule 55
	'%'            shift, and enter state 98
	'&&'           reduce using rule 55
	')'            reduce using rule 55
	'*'            shift, and enter state 99
	'+'            reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'/'            shift, and enter state 100
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	']'            reduce using rule 55
	'||'           reduce using rule 55

	MulOp          goto state 97

State 45

	Expr3 -> Expr3 . AddOp Expr4                        (rule 54)
	Expr2 -> Expr3 .                                    (rule 57)

	'!='           reduce using rule 57
	'&&'           reduce using rule 57
	')'            reduce using rule 57
	'+'            shift, and enter state 95
	','            reduce using rule 57
	'-'            shift, and enter state 96
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	']'            reduce using rule 57
	'||'           reduce using rule 57

	AddOp          goto state 94

State 46

	Expr2 -> Expr2 . RelOp Expr3                        (rule 56)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 58)
	Expr1 -> Expr2 .                                    (rule 59)

	'!='           shift, and enter state 87
	'&&'           shift, and enter state 88
	')'            reduce using rule 59
	','            reduce using rule 59
	';'            reduce using rule 59
	'<'            shift, and enter state 89
	'<='           shift, and enter state 90
	'=='           shift, and enter state 91
	'>'            shift, and enter state 92
	'>='           shift, and enter state 93
	']'            reduce using rule 59
	'||'           reduce using rule 59

	RelOp          goto state 86

State 47

	Expr -> Expr1 . '||' Expr                           (rule 60)
	Expr -> Expr1 .                                     (rule 61)

	')'            reduce using rule 61
	','            reduce using rule 61
	';'            reduce using rule 61
	']'            reduce using rule 61
	'||'           shift, and enter state 85


State 48

	Stmt -> 'return' Expr . ';'                         (rule 28)

	';'            shift, and enter state 84


State 49

	Expr6 -> Expr7 .                                    (rule 48)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	']'            reduce using rule 48
	'||'           reduce using rule 48


State 50

	Expr5 -> '!' . Expr6                                (rule 50)

	'('            shift, and enter state 51
	'false'        shift, and enter state 53
	'true'         shift, and enter state 54
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 55
	L_quoted       shift, and enter state 56

	Ident          goto state 38
	Integer        goto state 39
	String         goto state 40
	LValue         goto state 41
	Expr6          goto state 83
	Expr7          goto state 49

State 51

	Expr7 -> '(' . Expr ')'                             (rule 62)

	'!'            shift, and enter state 50
	'('            shift, and enter state 51
	'-'            shift, and enter state 52
	'false'        shift, and enter state 53
	'true'         shift, and enter state 54
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 55
	L_quoted       shift, and enter state 56

	Ident          goto state 38
	Integer        goto state 39
	String         goto state 40
	LValue         goto state 41
	Expr6          goto state 42
	Expr5          goto state 43
	Expr4          goto state 44
	Expr3          goto state 45
	Expr2          goto state 46
	Expr1          goto state 47
	Expr           goto state 82
	Expr7          goto state 49

State 52

	Expr5 -> '-' . Expr6                                (rule 49)

	'('            shift, and enter state 51
	'false'        shift, and enter state 53
	'true'         shift, and enter state 54
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 55
	L_quoted       shift, and enter state 56

	Ident          goto state 38
	Integer        goto state 39
	String         goto state 40
	LValue         goto state 41
	Expr6          goto state 81
	Expr7          goto state 49

State 53

	Expr6 -> 'false' .                                  (rule 45)

	'!='           reduce using rule 45
	'%'            reduce using rule 45
	'&&'           reduce using rule 45
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'+'            reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'/'            reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	']'            reduce using rule 45
	'||'           reduce using rule 45


State 54

	Expr6 -> 'true' .                                   (rule 44)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'&&'           reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'/'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	']'            reduce using rule 44
	'||'           reduce using rule 44


State 55

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	']'            reduce using rule 2
	'||'           reduce using rule 2


State 56

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	']'            reduce using rule 3
	'||'           reduce using rule 3


State 57

	Stmt -> 'print' Expr . ';'                          (rule 33)

	';'            shift, and enter state 80


State 58

	Stmt -> 'if' '(' . Expr ')' Block                   (rule 29)
	Stmt -> 'if' '(' . Expr ')' Block 'else' Block      (rule 30)

	'!'            shift, and enter state 50
	'('            shift, and enter state 51
	'-'            shift, and enter state 52
	'false'        shift, and enter state 53
	'true'         shift, and enter state 54
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 55
	L_quoted       shift, and enter state 56

	Ident          goto state 38
	Integer        goto state 39
	String         goto state 40
	LValue         goto state 41
	Expr6          goto state 42
	Expr5          goto state 43
	Expr4          goto state 44
	Expr3          goto state 45
	Expr2          goto state 46
	Expr1          goto state 47
	Expr           goto state 79
	Expr7          goto state 49

State 59

	Stmt -> 'for' Ident . 'in' 'range' '(' Expr ')' Block    (rule 32)

	'in'           shift, and enter state 78


State 60

	Stmt -> LValue '++' . ';'                           (rule 26)

	';'            shift, and enter state 77


State 61

	Stmt -> LValue '--' . ';'                           (rule 27)

	';'            shift, and enter state 76


State 62

	Stmt -> LValue '=' . Expr ';'                       (rule 25)

	'!'            shift, and enter state 50
	'('            shift, and enter state 51
	'-'            shift, and enter state 52
	'false'        shift, and enter state 53
	'true'         shift, and enter state 54
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 55
	L_quoted       shift, and enter state 56

	Ident          goto state 38
	Integer        goto state 39
	String         goto state 40
	LValue         goto state 41
	Expr6          goto state 42
	Expr5          goto state 43
	Expr4          goto state 44
	Expr3          goto state 45
	Expr2          goto state 46
	Expr1          goto state 47
	Expr           goto state 75
	Expr7          goto state 49

State 63

	Stmt -> Stmt . Stmt                                 (rule 22)
	Stmt -> Stmt Stmt .                                 (rule 22)

	';'            shift, and enter state 24
			(reduce using rule 22)

	'['            shift, and enter state 14
			(reduce using rule 22)

	'for'          shift, and enter state 25
			(reduce using rule 22)

	'if'           shift, and enter state 26
			(reduce using rule 22)

	'print'        shift, and enter state 27
			(reduce using rule 22)

	'return'       shift, and enter state 28
			(reduce using rule 22)

	'while'        shift, and enter state 29
			(reduce using rule 22)

	'{'            shift, and enter state 15
			(reduce using rule 22)

	'}'            reduce using rule 22
	L_Ident        shift, and enter state 2
			(reduce using rule 22)


	Ident          goto state 20
	Block          goto state 21
	Stmt           goto state 63
	LValue         goto state 23

State 64

	Block -> '{' Stmt '}' .                             (rule 15)

	';'            reduce using rule 15
	'['            reduce using rule 15
	'boolean'      reduce using rule 15
	'else'         reduce using rule 15
	'for'          reduce using rule 15
	'if'           reduce using rule 15
	'int'          reduce using rule 15
	'main'         reduce using rule 15
	'print'        reduce using rule 15
	'return'       reduce using rule 15
	'string'       reduce using rule 15
	'while'        reduce using rule 15
	'{'            reduce using rule 15
	'}'            reduce using rule 15
	L_Ident        reduce using rule 15
	%eof           reduce using rule 15


State 65

	LValue -> Ident '[' . Expr ']'                      (rule 41)

	'!'            shift, and enter state 50
	'('            shift, and enter state 51
	'-'            shift, and enter state 52
	'false'        shift, and enter state 53
	'true'         shift, and enter state 54
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 55
	L_quoted       shift, and enter state 56

	Ident          goto state 38
	Integer        goto state 39
	String         goto state 40
	LValue         goto state 41
	Expr6          goto state 42
	Expr5          goto state 43
	Expr4          goto state 44
	Expr3          goto state 45
	Expr2          goto state 46
	Expr1          goto state 47
	Expr           goto state 74
	Expr7          goto state 49

State 66

	Arg -> Type Ident .                                 (rule 8)
	Arg -> Type Ident . '[' ']'                         (rule 9)

	')'            reduce using rule 8
	','            reduce using rule 8
	'['            shift, and enter state 73


State 67

	Arg -> Type '&' . Ident                             (rule 10)

	L_Ident        shift, and enter state 2

	Ident          goto state 72

State 68

	TopDef -> Type Ident '(' ListArg ')' . Block        (rule 5)

	'['            shift, and enter state 14
	'{'            shift, and enter state 15

	Block          goto state 71

State 69

	ListArg -> Arg ',' . ListArg                        (rule 13)

	')'            reduce using rule 11
	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9

	Arg            goto state 17
	ListArg        goto state 70
	Type           goto state 19

State 70

	ListArg -> Arg ',' ListArg .                        (rule 13)

	')'            reduce using rule 13


State 71

	TopDef -> Type Ident '(' ListArg ')' Block .        (rule 5)

	'boolean'      reduce using rule 5
	'int'          reduce using rule 5
	'main'         reduce using rule 5
	'string'       reduce using rule 5


State 72

	Arg -> Type '&' Ident .                             (rule 10)

	')'            reduce using rule 10
	','            reduce using rule 10


State 73

	Arg -> Type Ident '[' . ']'                         (rule 9)

	']'            shift, and enter state 123


State 74

	LValue -> Ident '[' Expr . ']'                      (rule 41)

	']'            shift, and enter state 122


State 75

	Stmt -> LValue '=' Expr . ';'                       (rule 25)

	';'            shift, and enter state 121


State 76

	Stmt -> LValue '--' ';' .                           (rule 27)

	';'            reduce using rule 27
	'['            reduce using rule 27
	'for'          reduce using rule 27
	'if'           reduce using rule 27
	'print'        reduce using rule 27
	'return'       reduce using rule 27
	'while'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	L_Ident        reduce using rule 27


State 77

	Stmt -> LValue '++' ';' .                           (rule 26)

	';'            reduce using rule 26
	'['            reduce using rule 26
	'for'          reduce using rule 26
	'if'           reduce using rule 26
	'print'        reduce using rule 26
	'return'       reduce using rule 26
	'while'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_Ident        reduce using rule 26


State 78

	Stmt -> 'for' Ident 'in' . 'range' '(' Expr ')' Block    (rule 32)

	'range'        shift, and enter state 120


State 79

	Stmt -> 'if' '(' Expr . ')' Block                   (rule 29)
	Stmt -> 'if' '(' Expr . ')' Block 'else' Block      (rule 30)

	')'            shift, and enter state 119


State 80

	Stmt -> 'print' Expr ';' .                          (rule 33)

	';'            reduce using rule 33
	'['            reduce using rule 33
	'for'          reduce using rule 33
	'if'           reduce using rule 33
	'print'        reduce using rule 33
	'return'       reduce using rule 33
	'while'        reduce using rule 33
	'{'            reduce using rule 33
	'}'            reduce using rule 33
	L_Ident        reduce using rule 33


State 81

	Expr5 -> '-' Expr6 .                                (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	']'            reduce using rule 49
	'||'           reduce using rule 49


State 82

	Expr7 -> '(' Expr . ')'                             (rule 62)

	')'            shift, and enter state 118


State 83

	Expr5 -> '!' Expr6 .                                (rule 50)

	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'/'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	']'            reduce using rule 50
	'||'           reduce using rule 50


State 84

	Stmt -> 'return' Expr ';' .                         (rule 28)

	';'            reduce using rule 28
	'['            reduce using rule 28
	'for'          reduce using rule 28
	'if'           reduce using rule 28
	'print'        reduce using rule 28
	'return'       reduce using rule 28
	'while'        reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	L_Ident        reduce using rule 28


State 85

	Expr -> Expr1 '||' . Expr                           (rule 60)

	'!'            shift, and enter state 50
	'('            shift, and enter state 51
	'-'            shift, and enter state 52
	'false'        shift, and enter state 53
	'true'         shift, and enter state 54
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 55
	L_quoted       shift, and enter state 56

	Ident          goto state 38
	Integer        goto state 39
	String         goto state 40
	LValue         goto state 41
	Expr6          goto state 42
	Expr5          goto state 43
	Expr4          goto state 44
	Expr3          goto state 45
	Expr2          goto state 46
	Expr1          goto state 47
	Expr           goto state 117
	Expr7          goto state 49

State 86

	Expr2 -> Expr2 RelOp . Expr3                        (rule 56)

	'!'            shift, and enter state 50
	'('            shift, and enter state 51
	'-'            shift, and enter state 52
	'false'        shift, and enter state 53
	'true'         shift, and enter state 54
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 55
	L_quoted       shift, and enter state 56

	Ident          goto state 38
	Integer        goto state 39
	String         goto state 40
	LValue         goto state 41
	Expr6          goto state 42
	Expr5          goto state 43
	Expr4          goto state 44
	Expr3          goto state 116
	Expr7          goto state 49

State 87

	RelOp -> '!=' .                                     (rule 76)

	'!'            reduce using rule 76
	'('            reduce using rule 76
	'-'            reduce using rule 76
	'false'        reduce using rule 76
	'true'         reduce using rule 76
	L_Ident        reduce using rule 76
	L_integ        reduce using rule 76
	L_quoted       reduce using rule 76


State 88

	Expr1 -> Expr2 '&&' . Expr1                         (rule 58)

	'!'            shift, and enter state 50
	'('            shift, and enter state 51
	'-'            shift, and enter state 52
	'false'        shift, and enter state 53
	'true'         shift, and enter state 54
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 55
	L_quoted       shift, and enter state 56

	Ident          goto state 38
	Integer        goto state 39
	String         goto state 40
	LValue         goto state 41
	Expr6          goto state 42
	Expr5          goto state 43
	Expr4          goto state 44
	Expr3          goto state 45
	Expr2          goto state 46
	Expr1          goto state 115
	Expr7          goto state 49

State 89

	RelOp -> '<' .                                      (rule 71)

	'!'            reduce using rule 71
	'('            reduce using rule 71
	'-'            reduce using rule 71
	'false'        reduce using rule 71
	'true'         reduce using rule 71
	L_Ident        reduce using rule 71
	L_integ        reduce using rule 71
	L_quoted       reduce using rule 71


State 90

	RelOp -> '<=' .                                     (rule 72)

	'!'            reduce using rule 72
	'('            reduce using rule 72
	'-'            reduce using rule 72
	'false'        reduce using rule 72
	'true'         reduce using rule 72
	L_Ident        reduce using rule 72
	L_integ        reduce using rule 72
	L_quoted       reduce using rule 72


State 91

	RelOp -> '==' .                                     (rule 75)

	'!'            reduce using rule 75
	'('            reduce using rule 75
	'-'            reduce using rule 75
	'false'        reduce using rule 75
	'true'         reduce using rule 75
	L_Ident        reduce using rule 75
	L_integ        reduce using rule 75
	L_quoted       reduce using rule 75


State 92

	RelOp -> '>' .                                      (rule 73)

	'!'            reduce using rule 73
	'('            reduce using rule 73
	'-'            reduce using rule 73
	'false'        reduce using rule 73
	'true'         reduce using rule 73
	L_Ident        reduce using rule 73
	L_integ        reduce using rule 73
	L_quoted       reduce using rule 73


State 93

	RelOp -> '>=' .                                     (rule 74)

	'!'            reduce using rule 74
	'('            reduce using rule 74
	'-'            reduce using rule 74
	'false'        reduce using rule 74
	'true'         reduce using rule 74
	L_Ident        reduce using rule 74
	L_integ        reduce using rule 74
	L_quoted       reduce using rule 74


State 94

	Expr3 -> Expr3 AddOp . Expr4                        (rule 54)

	'!'            shift, and enter state 50
	'('            shift, and enter state 51
	'-'            shift, and enter state 52
	'false'        shift, and enter state 53
	'true'         shift, and enter state 54
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 55
	L_quoted       shift, and enter state 56

	Ident          goto state 38
	Integer        goto state 39
	String         goto state 40
	LValue         goto state 41
	Expr6          goto state 42
	Expr5          goto state 43
	Expr4          goto state 114
	Expr7          goto state 49

State 95

	AddOp -> '+' .                                      (rule 66)

	'!'            reduce using rule 66
	'('            reduce using rule 66
	'-'            reduce using rule 66
	'false'        reduce using rule 66
	'true'         reduce using rule 66
	L_Ident        reduce using rule 66
	L_integ        reduce using rule 66
	L_quoted       reduce using rule 66


State 96

	AddOp -> '-' .                                      (rule 67)

	'!'            reduce using rule 67
	'('            reduce using rule 67
	'-'            reduce using rule 67
	'false'        reduce using rule 67
	'true'         reduce using rule 67
	L_Ident        reduce using rule 67
	L_integ        reduce using rule 67
	L_quoted       reduce using rule 67


State 97

	Expr4 -> Expr4 MulOp . Expr5                        (rule 52)

	'!'            shift, and enter state 50
	'('            shift, and enter state 51
	'-'            shift, and enter state 52
	'false'        shift, and enter state 53
	'true'         shift, and enter state 54
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 55
	L_quoted       shift, and enter state 56

	Ident          goto state 38
	Integer        goto state 39
	String         goto state 40
	LValue         goto state 41
	Expr6          goto state 42
	Expr5          goto state 113
	Expr7          goto state 49

State 98

	MulOp -> '%' .                                      (rule 70)

	'!'            reduce using rule 70
	'('            reduce using rule 70
	'-'            reduce using rule 70
	'false'        reduce using rule 70
	'true'         reduce using rule 70
	L_Ident        reduce using rule 70
	L_integ        reduce using rule 70
	L_quoted       reduce using rule 70


State 99

	MulOp -> '*' .                                      (rule 68)

	'!'            reduce using rule 68
	'('            reduce using rule 68
	'-'            reduce using rule 68
	'false'        reduce using rule 68
	'true'         reduce using rule 68
	L_Ident        reduce using rule 68
	L_integ        reduce using rule 68
	L_quoted       reduce using rule 68


State 100

	MulOp -> '/' .                                      (rule 69)

	'!'            reduce using rule 69
	'('            reduce using rule 69
	'-'            reduce using rule 69
	'false'        reduce using rule 69
	'true'         reduce using rule 69
	L_Ident        reduce using rule 69
	L_integ        reduce using rule 69
	L_quoted       reduce using rule 69


State 101

	Expr6 -> Ident '(' . ListExpr ')'                   (rule 46)

	'!'            shift, and enter state 50
	'('            shift, and enter state 51
	')'            reduce using rule 63
	'-'            shift, and enter state 52
	'false'        shift, and enter state 53
	'true'         shift, and enter state 54
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 55
	L_quoted       shift, and enter state 56

	Ident          goto state 38
	Integer        goto state 39
	String         goto state 40
	LValue         goto state 41
	Expr6          goto state 42
	Expr5          goto state 43
	Expr4          goto state 44
	Expr3          goto state 45
	Expr2          goto state 46
	Expr1          goto state 47
	Expr           goto state 111
	Expr7          goto state 49
	ListExpr       goto state 112

State 102

	Stmt -> 'while' '(' Expr . ')' Block                (rule 31)

	')'            shift, and enter state 110


State 103

	ListDecl -> Decl ';' ListDecl .                     (rule 21)

	']'            reduce using rule 21


State 104

	Block -> '[' ListDecl ']' '{' . Stmt '}'            (rule 14)

	';'            shift, and enter state 24
	'['            shift, and enter state 14
	'for'          shift, and enter state 25
	'if'           shift, and enter state 26
	'print'        shift, and enter state 27
	'return'       shift, and enter state 28
	'while'        shift, and enter state 29
	'{'            shift, and enter state 15
	L_Ident        shift, and enter state 2

	Ident          goto state 20
	Block          goto state 21
	Stmt           goto state 109
	LValue         goto state 23

State 105

	Item -> Ident '=' . Expr                            (rule 18)

	'!'            shift, and enter state 50
	'('            shift, and enter state 51
	'-'            shift, and enter state 52
	'false'        shift, and enter state 53
	'true'         shift, and enter state 54
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 55
	L_quoted       shift, and enter state 56

	Ident          goto state 38
	Integer        goto state 39
	String         goto state 40
	LValue         goto state 41
	Expr6          goto state 42
	Expr5          goto state 43
	Expr4          goto state 44
	Expr3          goto state 45
	Expr2          goto state 46
	Expr1          goto state 47
	Expr           goto state 108
	Expr7          goto state 49

State 106

	Item -> Ident '[' . Expr ']'                        (rule 19)

	'!'            shift, and enter state 50
	'('            shift, and enter state 51
	'-'            shift, and enter state 52
	'false'        shift, and enter state 53
	'true'         shift, and enter state 54
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 55
	L_quoted       shift, and enter state 56

	Ident          goto state 38
	Integer        goto state 39
	String         goto state 40
	LValue         goto state 41
	Expr6          goto state 42
	Expr5          goto state 43
	Expr4          goto state 44
	Expr3          goto state 45
	Expr2          goto state 46
	Expr1          goto state 47
	Expr           goto state 107
	Expr7          goto state 49

State 107

	Item -> Ident '[' Expr . ']'                        (rule 19)

	']'            shift, and enter state 130


State 108

	Item -> Ident '=' Expr .                            (rule 18)

	';'            reduce using rule 18
	']'            reduce using rule 18


State 109

	Block -> '[' ListDecl ']' '{' Stmt . '}'            (rule 14)
	Stmt -> Stmt . Stmt                                 (rule 22)

	';'            shift, and enter state 24
	'['            shift, and enter state 14
	'for'          shift, and enter state 25
	'if'           shift, and enter state 26
	'print'        shift, and enter state 27
	'return'       shift, and enter state 28
	'while'        shift, and enter state 29
	'{'            shift, and enter state 15
	'}'            shift, and enter state 129
	L_Ident        shift, and enter state 2

	Ident          goto state 20
	Block          goto state 21
	Stmt           goto state 63
	LValue         goto state 23

State 110

	Stmt -> 'while' '(' Expr ')' . Block                (rule 31)

	'['            shift, and enter state 14
	'{'            shift, and enter state 15

	Block          goto state 128

State 111

	ListExpr -> Expr .                                  (rule 64)
	ListExpr -> Expr . ',' ListExpr                     (rule 65)

	')'            reduce using rule 64
	','            shift, and enter state 127


State 112

	Expr6 -> Ident '(' ListExpr . ')'                   (rule 46)

	')'            shift, and enter state 126


State 113

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 52)

	'!='           reduce using rule 52
	'%'            reduce using rule 52
	'&&'           reduce using rule 52
	')'            reduce using rule 52
	'*'            reduce using rule 52
	'+'            reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'/'            reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	']'            reduce using rule 52
	'||'           reduce using rule 52


State 114

	Expr4 -> Expr4 . MulOp Expr5                        (rule 52)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 54)

	'!='           reduce using rule 54
	'%'            shift, and enter state 98
	'&&'           reduce using rule 54
	')'            reduce using rule 54
	'*'            shift, and enter state 99
	'+'            reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'/'            shift, and enter state 100
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	']'            reduce using rule 54
	'||'           reduce using rule 54

	MulOp          goto state 97

State 115

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 58)

	')'            reduce using rule 58
	','            reduce using rule 58
	';'            reduce using rule 58
	']'            reduce using rule 58
	'||'           reduce using rule 58


State 116

	Expr3 -> Expr3 . AddOp Expr4                        (rule 54)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 56)

	'!='           reduce using rule 56
	'&&'           reduce using rule 56
	')'            reduce using rule 56
	'+'            shift, and enter state 95
	','            reduce using rule 56
	'-'            shift, and enter state 96
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	']'            reduce using rule 56
	'||'           reduce using rule 56

	AddOp          goto state 94

State 117

	Expr -> Expr1 '||' Expr .                           (rule 60)

	')'            reduce using rule 60
	','            reduce using rule 60
	';'            reduce using rule 60
	']'            reduce using rule 60


State 118

	Expr7 -> '(' Expr ')' .                             (rule 62)

	'!='           reduce using rule 62
	'%'            reduce using rule 62
	'&&'           reduce using rule 62
	')'            reduce using rule 62
	'*'            reduce using rule 62
	'+'            reduce using rule 62
	','            reduce using rule 62
	'-'            reduce using rule 62
	'/'            reduce using rule 62
	';'            reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'=='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	']'            reduce using rule 62
	'||'           reduce using rule 62


State 119

	Stmt -> 'if' '(' Expr ')' . Block                   (rule 29)
	Stmt -> 'if' '(' Expr ')' . Block 'else' Block      (rule 30)

	'['            shift, and enter state 14
	'{'            shift, and enter state 15

	Block          goto state 125

State 120

	Stmt -> 'for' Ident 'in' 'range' . '(' Expr ')' Block    (rule 32)

	'('            shift, and enter state 124


State 121

	Stmt -> LValue '=' Expr ';' .                       (rule 25)

	';'            reduce using rule 25
	'['            reduce using rule 25
	'for'          reduce using rule 25
	'if'           reduce using rule 25
	'print'        reduce using rule 25
	'return'       reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	L_Ident        reduce using rule 25


State 122

	LValue -> Ident '[' Expr ']' .                      (rule 41)

	'!='           reduce using rule 41
	'%'            reduce using rule 41
	'&&'           reduce using rule 41
	')'            reduce using rule 41
	'*'            reduce using rule 41
	'+'            reduce using rule 41
	'++'           reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	'--'           reduce using rule 41
	'/'            reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'='            reduce using rule 41
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	']'            reduce using rule 41
	'||'           reduce using rule 41


State 123

	Arg -> Type Ident '[' ']' .                         (rule 9)

	')'            reduce using rule 9
	','            reduce using rule 9


State 124

	Stmt -> 'for' Ident 'in' 'range' '(' . Expr ')' Block    (rule 32)

	'!'            shift, and enter state 50
	'('            shift, and enter state 51
	'-'            shift, and enter state 52
	'false'        shift, and enter state 53
	'true'         shift, and enter state 54
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 55
	L_quoted       shift, and enter state 56

	Ident          goto state 38
	Integer        goto state 39
	String         goto state 40
	LValue         goto state 41
	Expr6          goto state 42
	Expr5          goto state 43
	Expr4          goto state 44
	Expr3          goto state 45
	Expr2          goto state 46
	Expr1          goto state 47
	Expr           goto state 133
	Expr7          goto state 49

State 125

	Stmt -> 'if' '(' Expr ')' Block .                   (rule 29)
	Stmt -> 'if' '(' Expr ')' Block . 'else' Block      (rule 30)

	';'            reduce using rule 29
	'['            reduce using rule 29
	'else'         shift, and enter state 132
	'for'          reduce using rule 29
	'if'           reduce using rule 29
	'print'        reduce using rule 29
	'return'       reduce using rule 29
	'while'        reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	L_Ident        reduce using rule 29


State 126

	Expr6 -> Ident '(' ListExpr ')' .                   (rule 46)

	'!='           reduce using rule 46
	'%'            reduce using rule 46
	'&&'           reduce using rule 46
	')'            reduce using rule 46
	'*'            reduce using rule 46
	'+'            reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'/'            reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	']'            reduce using rule 46
	'||'           reduce using rule 46


State 127

	ListExpr -> Expr ',' . ListExpr                     (rule 65)

	'!'            shift, and enter state 50
	'('            shift, and enter state 51
	')'            reduce using rule 63
	'-'            shift, and enter state 52
	'false'        shift, and enter state 53
	'true'         shift, and enter state 54
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 55
	L_quoted       shift, and enter state 56

	Ident          goto state 38
	Integer        goto state 39
	String         goto state 40
	LValue         goto state 41
	Expr6          goto state 42
	Expr5          goto state 43
	Expr4          goto state 44
	Expr3          goto state 45
	Expr2          goto state 46
	Expr1          goto state 47
	Expr           goto state 111
	Expr7          goto state 49
	ListExpr       goto state 131

State 128

	Stmt -> 'while' '(' Expr ')' Block .                (rule 31)

	';'            reduce using rule 31
	'['            reduce using rule 31
	'for'          reduce using rule 31
	'if'           reduce using rule 31
	'print'        reduce using rule 31
	'return'       reduce using rule 31
	'while'        reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	L_Ident        reduce using rule 31


State 129

	Block -> '[' ListDecl ']' '{' Stmt '}' .            (rule 14)

	';'            reduce using rule 14
	'['            reduce using rule 14
	'boolean'      reduce using rule 14
	'else'         reduce using rule 14
	'for'          reduce using rule 14
	'if'           reduce using rule 14
	'int'          reduce using rule 14
	'main'         reduce using rule 14
	'print'        reduce using rule 14
	'return'       reduce using rule 14
	'string'       reduce using rule 14
	'while'        reduce using rule 14
	'{'            reduce using rule 14
	'}'            reduce using rule 14
	L_Ident        reduce using rule 14
	%eof           reduce using rule 14


State 130

	Item -> Ident '[' Expr ']' .                        (rule 19)

	';'            reduce using rule 19
	']'            reduce using rule 19


State 131

	ListExpr -> Expr ',' ListExpr .                     (rule 65)

	')'            reduce using rule 65


State 132

	Stmt -> 'if' '(' Expr ')' Block 'else' . Block      (rule 30)

	'['            shift, and enter state 14
	'{'            shift, and enter state 15

	Block          goto state 135

State 133

	Stmt -> 'for' Ident 'in' 'range' '(' Expr . ')' Block    (rule 32)

	')'            shift, and enter state 134


State 134

	Stmt -> 'for' Ident 'in' 'range' '(' Expr ')' . Block    (rule 32)

	'['            shift, and enter state 14
	'{'            shift, and enter state 15

	Block          goto state 136

State 135

	Stmt -> 'if' '(' Expr ')' Block 'else' Block .      (rule 30)

	';'            reduce using rule 30
	'['            reduce using rule 30
	'for'          reduce using rule 30
	'if'           reduce using rule 30
	'print'        reduce using rule 30
	'return'       reduce using rule 30
	'while'        reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	L_Ident        reduce using rule 30


State 136

	Stmt -> 'for' Ident 'in' 'range' '(' Expr ')' Block .    (rule 32)

	';'            reduce using rule 32
	'['            reduce using rule 32
	'for'          reduce using rule 32
	'if'           reduce using rule 32
	'print'        reduce using rule 32
	'return'       reduce using rule 32
	'while'        reduce using rule 32
	'{'            reduce using rule 32
	'}'            reduce using rule 32
	L_Ident        reduce using rule 32


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 77
Number of terminals: 43
Number of non-terminals: 29
Number of states: 137
